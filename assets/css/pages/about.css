.header{margin-top:35px}@media (max-width:576px){.header{margin-top:0;margin-bottom:0}}.header__logo-text{color:#001a49}.about-center{margin-top:180px;padding-bottom:140px}@media (max-width:576px){.about-center{margin-top:64px}}.about-center__heading-block{flex-wrap:wrap;margin-top:30px}@media (max-width:800px){.about-center__heading-block{margin-top:15px}}@media (max-width:576px){.about-center__heading-block{flex-direction:column;margin-top:30px}}.about-center__heading{font-weight:800;font-size:40px;line-height:56px}@media (max-width:576px){.about-center__heading{margin-top:0}}@media (max-width:800px){.about-center__descr{margin-top:18px}}@media (max-width:576px){.about-center__info{margin-top:190px}}@media (max-width:360px){.about-center__info{margin-top:117px}}.about-center__abilities{margin-bottom:100px}.about-center__for-diagnostics{margin-top:100px}.sign-for-diagnostics__btn{margin:0 auto;display:block}.quote-info{padding-bottom:140px;position:relative;padding-left:0}.quote-info__content{display:flex}@media (max-width:576px){.quote-info__content{flex-wrap:wrap}}.quote-info__img{position:relative}@media (max-width:800px){.quote-info__img{top:90px;height:fit-content}}@media (max-width:576px){.quote-info__quotes{top:50%;left:1%}}@media (max-width:360px){.quote-info__quotes{top:42%}}.quote-info__descr{width:50%;margin-left:-51px;margin-top:55px}@media (max-width:576px){.quote-info__descr{width:100%;margin-left:0;margin-top:75px}}.feedback{padding-top:140px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
